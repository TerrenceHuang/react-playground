{"version":3,"sources":["i18n.js","components/ChangeLanguageButton.jsx","components/LanguageChooser.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","fallbackLng","interpolation","escapeValue","ChangeLanguageButton","language","useTranslation","t","className","onClick","changeLanguage","LanguageChooser","class","role","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAsBAA,IAIGC,IAAIC,KACJD,IAAIE,KACJC,KAAK,CACJC,UAxBc,CAChBC,GAAI,CACFC,YAAa,CACX,sBAAuB,gBACvBD,GAAI,UACJ,QAAS,YAGb,QAAS,CACPC,YAAa,CACX,sBAAuB,2BACvBD,GAAI,eACJ,QAAS,kBAaXE,YAAa,KACbC,cAAe,CAAEC,aAAa,KAGnBV,EAAf,EAAeA,I,+BCfAW,MAjBf,YAA6C,IAAbC,EAAY,EAAZA,SAC9B,EAAoBC,cAAZC,EAAR,EAAQA,EAAGd,EAAX,EAAWA,KAEX,OACE,wBACEe,UACE,mBAAqBf,EAAKY,WAAaA,EAAW,UAAY,IAEhEI,QAAS,WACPhB,EAAKiB,eAAeL,IALxB,SAQGE,EAAEF,MCFMM,MAVf,WAEE,OACE,sBAAKC,MAAM,YAAYC,KAAK,QAA5B,UACE,cAAC,EAAD,CAAsBR,SAAS,OAC/B,cAAC,EAAD,CAAsBA,SAAS,cCYtBS,MAbf,WACE,IAAQP,EAAMD,cAANC,EAER,OACE,cAAC,IAAD,UACE,sBAAKK,MAAM,YAAX,UACE,6BAAKL,EAAE,yBACP,cAAC,EAAD,UCDOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d197d0b.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\n// TODO: Separate language files\nconst resources = {\n  en: {\n    translation: {\n      \"App Component title\": \"App Component\",\n      en: \"English\",\n      \"zh-TW\": \"Chinese\",\n    },\n  },\n  \"zh-TW\": {\n    translation: {\n      \"App Component title\": \"應用元件\",\n      en: \"英文\",\n      \"zh-TW\": \"中文\",\n    },\n  },\n};\n\ni18n\n  // TODO: Make sure LanguageDetector works,\n  // it can save change to storage and keep setting when reload,\n  // but seems not default to browser setting now\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: \"en\",\n    interpolation: { escapeValue: false },\n  });\n\nexport default i18n;\n","import { useTranslation } from \"react-i18next\";\n\nfunction ChangeLanguageButton({ language }) {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <button\n      className={\n        \"btn btn-primary\" + (i18n.language === language ? \" active\" : \"\")\n      }\n      onClick={() => {\n        i18n.changeLanguage(language);\n      }}\n    >\n      {t(language)}\n    </button>\n  );\n}\n\nexport default ChangeLanguageButton;\n","import ChangeLanguageButton from \"./ChangeLanguageButton\";\n\nfunction LanguageChooser() {\n  // TODO: Load from language list\n  return (\n    <div class=\"btn-group\" role=\"group\">\n      <ChangeLanguageButton language=\"en\" />\n      <ChangeLanguageButton language=\"zh-TW\" />\n    </div>\n  );\n}\n\nexport default LanguageChooser;\n","import { useTranslation } from \"react-i18next\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./App.scss\";\nimport LanguageChooser from \"./components/LanguageChooser\";\n\nfunction App() {\n  const { t } = useTranslation();\n\n  return (\n    <Router>\n      <div class=\"container\">\n        <h1>{t(\"App Component title\")}</h1>\n        <LanguageChooser />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as bootstrap from \"bootstrap\";\n\nimport \"./custom.scss\";\nimport \"./index.scss\";\nimport \"./i18n\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}