{"version":3,"sources":["i18n.js","components/Home.jsx","components/ChangeLanguageButton.jsx","components/LanguageChooser.jsx","components/NavbarBrand.jsx","components/NavItem.jsx","components/NavItems.jsx","components/NavItemsToggler.jsx","components/Navbar.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","Languages","fallbackLng","interpolation","escapeValue","Home","t","useTranslation","ChangeLanguageButton","language","className","onClick","changeLanguage","LanguageChooser","role","NavbarBrand","to","NavItem","pathname","textLanguageKey","location","useLocation","NavItems","id","NavItemsToggler","type","Navbar","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA0BAA,IAIGC,IAAIC,KACJD,IAAIE,KACJC,KAAK,CACJC,UA5Bc,CAChBC,GAAI,CACFC,YAAa,CACX,eAAgB,mBAChB,aAAc,iBACdC,UAAW,YACXF,GAAI,UACJ,QAAS,YAGb,QAAS,CACPC,YAAa,CACX,eAAgB,2BAChB,aAAc,2BACdC,UAAW,eACXF,GAAI,eACJ,QAAS,kBAaXG,YAAa,KACbC,cAAe,CAAEC,aAAa,KAGnBX,EAAf,EAAeA,I,sCC/BAY,MALf,WACE,IAAQC,EAAMC,cAAND,EACR,OAAO,6BAAKA,EAAE,iBCeDE,MAjBf,YAA6C,IAAbC,EAAY,EAAZA,SAC9B,EAAoBF,cAAZD,EAAR,EAAQA,EAAGb,EAAX,EAAWA,KAEX,OACE,wBACEiB,UACE,mBAAqBjB,EAAKgB,WAAaA,EAAW,UAAY,IAEhEE,QAAS,WACPlB,EAAKmB,eAAeH,IALxB,SAQGH,EAAEG,MCFMI,MAVf,WAEE,OACE,sBAAKH,UAAU,YAAYI,KAAK,QAAQ,aAAW,wBAAnD,UACE,cAAC,EAAD,CAAsBL,SAAS,OAC/B,cAAC,EAAD,CAAsBA,SAAS,cCMtBM,MAVf,WACE,IAAQT,EAAMC,cAAND,EAER,OACE,cAAC,IAAD,CAAMI,UAAU,eAAeM,GAAG,IAAlC,SACGV,EAAE,mBCaMW,MAjBf,YAAiD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBACrBC,EAAWC,cACTf,EAAMC,cAAND,EAER,OACE,oBAAII,UAAU,WAAd,SACE,cAAC,IAAD,CACEA,UAAS,mBAAcU,EAASF,WAAaA,EAAW,SAAW,IACnE,eAAcE,EAASF,WAAaA,EAAW,OAAS,GACxDF,GAAIE,EAHN,SAKGZ,EAAEa,QCHIG,MAVf,WACE,OACE,qBAAKZ,UAAU,2BAA2Ba,GAAG,YAA7C,SACE,oBAAIb,UAAU,aAAd,SACE,cAAC,EAAD,CAASQ,SAAS,aAAaC,gBAAgB,mBCUxCK,MAhBf,WACE,OACE,wBACEd,UAAU,iBACVe,KAAK,SACL,iBAAe,WACf,iBAAe,aACf,gBAAc,YACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMf,UAAU,2BCKPgB,MAZf,WACE,OACE,qBAAKhB,UAAU,gDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UC0BOiB,MArBf,WACE,OACE,eAAC,IAAD,CAAQC,SAJU,oBAIlB,UACE,cAAC,EAAD,IACA,qBAAKlB,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAUd,GAAG,iBChBVe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.117c4cb0.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\n// TODO: Separate language files\nconst resources = {\n  en: {\n    translation: {\n      \"Navbar title\": \"React Playground\",\n      \"Home title\": \"Home Component\",\n      Languages: \"Languages\",\n      en: \"English\",\n      \"zh-TW\": \"Chinese\",\n    },\n  },\n  \"zh-TW\": {\n    translation: {\n      \"Navbar title\": \"React 遊樂場\",\n      \"Home title\": \"主頁元件\",\n      Languages: \"語言\",\n      en: \"英文\",\n      \"zh-TW\": \"中文\",\n    },\n  },\n};\n\ni18n\n  // TODO: Make sure LanguageDetector works,\n  // it can save change to storage and keep setting when reload,\n  // but seems not default to browser setting now\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: \"en\",\n    interpolation: { escapeValue: false },\n  });\n\nexport default i18n;\n","import { useTranslation } from \"react-i18next\";\n\nfunction Home() {\n  const { t } = useTranslation();\n  return <h1>{t(\"Home title\")}</h1>;\n}\n\nexport default Home;\n","import { useTranslation } from \"react-i18next\";\n\nfunction ChangeLanguageButton({ language }) {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <button\n      className={\n        \"btn btn-primary\" + (i18n.language === language ? \" active\" : \"\")\n      }\n      onClick={() => {\n        i18n.changeLanguage(language);\n      }}\n    >\n      {t(language)}\n    </button>\n  );\n}\n\nexport default ChangeLanguageButton;\n","import ChangeLanguageButton from \"./ChangeLanguageButton\";\n\nfunction LanguageChooser() {\n  // TODO: Load from language list\n  return (\n    <div className=\"btn-group\" role=\"group\" aria-label=\"Language button group\">\n      <ChangeLanguageButton language=\"en\" />\n      <ChangeLanguageButton language=\"zh-TW\" />\n    </div>\n  );\n}\n\nexport default LanguageChooser;\n","import { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavbarBrand() {\n  const { t } = useTranslation();\n\n  return (\n    <Link className=\"navbar-brand\" to=\"/\">\n      {t(\"Navbar title\")}\n    </Link>\n  );\n}\n\nexport default NavbarBrand;\n","import { useLocation } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavItem({ pathname, textLanguageKey }) {\n  const location = useLocation();\n  const { t } = useTranslation();\n\n  return (\n    <li className=\"nav-item\">\n      <Link\n        className={`nav-link ${location.pathname === pathname ? \"active\" : \"\"}`}\n        aria-current={location.pathname === pathname ? \"page\" : \"\"}\n        to={pathname}\n      >\n        {t(textLanguageKey)}\n      </Link>\n    </li>\n  );\n}\n\nexport default NavItem;\n","import NavItem from \"./NavItem\";\n\nfunction NavItems() {\n  return (\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul className=\"navbar-nav\">\n        <NavItem pathname=\"/languages\" textLanguageKey=\"Languages\" />\n      </ul>\n    </div>\n  );\n}\n\nexport default NavItems;\n","function NavItemsToggler() {\n  return (\n    <button\n      className=\"navbar-toggler\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n  );\n}\n\nexport default NavItemsToggler;\n","import NavbarBrand from \"./NavbarBrand\";\nimport NavItems from \"./NavItems\";\nimport NavItemsToggler from \"./NavItemsToggler\";\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <NavbarBrand />\n        <NavItemsToggler />\n        <NavItems />\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport \"./App.scss\";\nimport Home from \"./components/Home\";\nimport LanguageChooser from \"./components/LanguageChooser\";\nimport Navbar from \"./components/Navbar\";\n\n// TODO: Put to config, like homepage property in package.json\nconst routeBasename = \"/react-playground\";\n\nfunction App() {\n  return (\n    <Router basename={routeBasename}>\n      <Navbar />\n      <div className=\"container pt-3\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/languages\">\n            <LanguageChooser />\n          </Route>\n          <Route>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as bootstrap from \"bootstrap\";\n\nimport \"./custom.scss\";\nimport \"./index.scss\";\nimport \"./i18n\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}